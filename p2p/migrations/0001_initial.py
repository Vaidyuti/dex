# Generated by Django 4.0.6 on 2022-08-28 08:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('prosumer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Buy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False, editable=False, help_text='Whether the record is deleted or not (soft-delete)')),
                ('closing_time', models.DateTimeField(help_text='The time at which the seller has stopped the buy operation.', verbose_name='closing_time')),
                ('opening_time', models.DateTimeField(help_text='The time at which the seller has started the buy operation.', verbose_name='opening_time')),
                ('status', models.CharField(choices=[('processed', 'Processed'), ('processing', 'Processing'), ('not_processed', 'Not Processed')], help_text='The trade status of the buy operation.', max_length=255, verbose_name='trade_status')),
                ('units', models.DecimalField(decimal_places=8, help_text='The amount of units in kWh that is bought by the buyer for the specified unit price.', max_digits=30, verbose_name='units_in_kwh')),
                ('buyer', models.ForeignKey(help_text='Foreign Key of the prosumer that performed the buy operation.', on_delete=django.db.models.deletion.PROTECT, related_name='buies', to='prosumer.prosumer', verbose_name='buyer_fk')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False, editable=False, help_text='Whether the record is deleted or not (soft-delete)')),
                ('closing_time', models.DateTimeField(help_text='The time at which the the seller has stopped the sell operation.', verbose_name='closing_time')),
                ('opening_time', models.DateTimeField(help_text='The time at which the seller has started the sell operation.', verbose_name='opening_time')),
                ('status', models.CharField(choices=[('processed', 'Processed'), ('processing', 'Processing'), ('not_processed', 'Not Processed')], default='not_processed', help_text='The trade status of this sell operation.', max_length=255, verbose_name='trade_status')),
                ('unit_price', models.DecimalField(decimal_places=10, help_text='The price per unit in local currency that is imposed on the amount of units sold in the sell operation.', max_digits=16, verbose_name='unit_price_in_local_currency')),
                ('units', models.DecimalField(decimal_places=8, help_text='The amount of units in kWh that is sold by the seller for the specified unit price.', max_digits=30, verbose_name='units_in_kwh')),
                ('seller', models.ForeignKey(help_text='Foreign Key of the prosumer that performed the sell operation.', on_delete=django.db.models.deletion.PROTECT, related_name='sells', to='prosumer.prosumer', verbose_name='seller_fk')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False, editable=False, help_text='Whether the record is deleted or not (soft-delete)')),
                ('closing_time', models.DateTimeField(help_text='The time at which the trade between the two peers has stopped.', verbose_name='closing_time')),
                ('opening_time', models.DateTimeField(help_text='The time at which the trade between the two peers has started.', verbose_name='opening_time')),
                ('unit_price', models.DecimalField(decimal_places=10, help_text='The price per unit in local currency that is imposed on the amount of units transferred in the trade.', max_digits=16, verbose_name='unit_price_in_local_currency')),
                ('units', models.DecimalField(decimal_places=8, help_text='The amount of units in kWh that has been exchanged from the buyer to the seller in the trade for the specified unit price.', max_digits=30, verbose_name='units_in_kwh')),
                ('buy', models.ForeignKey(help_text='The buy operation associated with the atomic trade.', on_delete=django.db.models.deletion.PROTECT, related_name='trades', to='p2p.buy', verbose_name='buy_fk')),
                ('sell', models.ForeignKey(help_text='The sell operation associated with the atomic trade.', on_delete=django.db.models.deletion.PROTECT, related_name='trades', to='p2p.sell', verbose_name='sell_fk')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
